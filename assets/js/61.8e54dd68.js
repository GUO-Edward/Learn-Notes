(window.webpackJsonp=window.webpackJsonp||[]).push([[61],{393:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"pormise-generator-async-await-区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pormise-generator-async-await-区别"}},[t._v("#")]),t._v(" pormise Generator async/await 区别")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("promise")]),t._v("和"),s("code",[t._v("async/await")]),t._v("是专门用于处理异步操作的")]),t._v(" "),s("li",[s("code",[t._v("Generator")]),t._v("并不是为异步而设计出来的，它还有其他功能（对象迭代、控制输出、部署"),s("code",[t._v("Interator")]),t._v("接口...）")]),t._v(" "),s("li",[s("code",[t._v("promise")]),t._v("编写代码相比"),s("code",[t._v("Generator")]),t._v("、"),s("code",[t._v("async")]),t._v("更为复杂化，且可读性也稍差")]),t._v(" "),s("li",[s("code",[t._v("Generator")]),t._v("、"),s("code",[t._v("async")]),t._v("需要与"),s("code",[t._v("promise")]),t._v("对象搭配处理异步情况")]),t._v(" "),s("li",[s("strong",[s("code",[t._v("async")]),t._v("实质是"),s("code",[t._v("Generator")]),t._v("的语法糖，相当于会自动执行"),s("code",[t._v("Generator")]),t._v("函数")])]),t._v(" "),s("li",[s("strong",[s("code",[t._v("async")]),t._v("使用上更为简洁，将异步代码以同步的形式进行编写，是处理异步编程的最终方案")])])]),t._v(" "),s("h2",{attrs:{id:"bind、call、apply的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#bind、call、apply的区别"}},[t._v("#")]),t._v(" bind、call、apply的区别")]),t._v(" "),s("ul",[s("li",[t._v("bind只改变this指向 不会调用")]),t._v(" "),s("li",[t._v("call与apply 改变this指向后 并且执行一次")]),t._v(" "),s("li",[t._v("call与apply 传入的参数不同 apply传入数组 call和bind传入的是一个参数列表 但bind的参数列表可以分多次传入")])]),t._v(" "),s("h2",{attrs:{id:"js闭包的理解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#js闭包的理解"}},[t._v("#")]),t._v(" JS闭包的理解")]),t._v(" "),s("blockquote",[s("p",[t._v("闭包就是能够读取其他函数内部变量的函数 即闭包就是将函数内部和函数外部连接起来的一座桥梁")])]),t._v(" "),s("p",[t._v("它的最大用处有两个，一个是可以读取函数内部的变量，另一个就是让这些变量的值始终保持在内存中。")]),t._v(" "),s("p",[s("strong",[t._v("使用闭包的注意点：")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("由于闭包会使得函数中的变量都被保存在内存中，内存消耗很大，所以不能滥用闭包，否则会造成网页的性能问题，在IE中可能导致内存泄露。解决方法是，在退出函数之前，将不使用的局部变量全部删除。")])]),t._v(" "),s("li",[s("p",[t._v("闭包会在父函数外部，改变父函数内部变量的值。所以，如果你把父函数当作对象（object）使用，把闭包当作它的公用方法（Public Method），把内部变量当作它的私有属性（private value），这时一定要小心，不要随便改变父函数内部变量的值。")])])]),t._v(" "),s("p",[s("strong",[t._v("闭包的作用：")]),t._v("\n1.避免变量被污染\n2.私有化\n3.保存变量 常驻内存\n4.闭包的应用场景：防抖 节流 库的封装（保证数据的私有性）")]),t._v(" "),s("h2",{attrs:{id:"import与-require-的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#import与-require-的区别"}},[t._v("#")]),t._v(" import与 require 的区别")]),t._v(" "),s("ul",[s("li",[t._v("require,exports,module.exports属于CommonJS规范，import,export,export default属于ES6规范")]),t._v(" "),s("li",[t._v("require支持动态导入，动态匹配路径，import对这两者都不支持")]),t._v(" "),s("li",[t._v("require是运行时调用，import是编译时调用")]),t._v(" "),s("li",[t._v("require是赋值过程，import是解构过程")]),t._v(" "),s("li",[t._v("对于export和export default不同的使用方式，import就要采取不同的引用方式，主要区别在于是否存在{}，export导出的,import导入需要{}，导入和导出一一对应，export default默认导出的，import导入不需要{}")]),t._v(" "),s("li",[t._v("exports是module.exports的一种简写形式，不能直接给exports赋值")]),t._v(" "),s("li",[t._v("当直接给module.exports赋值时，exports会失效")])]),t._v(" "),s("h2",{attrs:{id:"节流和防抖"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#节流和防抖"}},[t._v("#")]),t._v(" 节流和防抖")]),t._v(" "),s("ul",[s("li",[t._v("节流: n 秒内只运行一次，若在 n 秒内重复触发，只有一次生效")]),t._v(" "),s("li",[t._v("防抖: n 秒后在执行该事件，若在 n 秒内被重复触发，则重新计时")])]),t._v(" "),s("p",[s("strong",[t._v("二者的区别")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("节流，节省交互沟通。流，不一定指流量。")])]),t._v(" "),s("li",[s("p",[t._v('"别急，一个一个来，按时间节奏来，插队者无效"')])]),t._v(" "),s("li",[s("p",[t._v("例如，drag或scroll期间触发某个回调，要设置一个时间间隔")])]),t._v(" "),s("li",[s("p",[t._v('防抖，防止抖动"你先抖动着，啥时候停了，再执行下一步"')])]),t._v(" "),s("li",[s("p",[t._v("例如，一个搜索输入框，等输入停止之后，再触发搜索")])]),t._v(" "),s("li",[s("p",[t._v("节流：限制执行频率，有节奏的执行")])]),t._v(" "),s("li",[s("p",[t._v("防抖：限制执行次数，多次密集的触发只执行一次")])]),t._v(" "),s("li",[s("p",[t._v('节流关注"过程"，防抖关注"结果"')])])]),t._v(" "),s("h2",{attrs:{id:"说明ajax-fetch-axios三者的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#说明ajax-fetch-axios三者的区别"}},[t._v("#")]),t._v(" 说明Ajax Fetch Axios三者的区别")]),t._v(" "),s("p",[t._v("三者都用于网络请求  但是不同纬度")]),t._v(" "),s("ul",[s("li",[t._v("Ajax(Asynchronous Javascript and XML)，一种技术统称")]),t._v(" "),s("li",[t._v("Fetch，一个具体的API")]),t._v(" "),s("li",[t._v("Axios，第三方库 https://axios-http.com")])]),t._v(" "),s("h2",{attrs:{id:"箭头函数的缺点以及什么时候不能使用箭头函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#箭头函数的缺点以及什么时候不能使用箭头函数"}},[t._v("#")]),t._v(" 箭头函数的缺点以及什么时候不能使用箭头函数")]),t._v(" "),s("ul",[s("li",[t._v("没有arguments")]),t._v(" "),s("li",[t._v("无法通过 apply call bind 改变this")]),t._v(" "),s("li",[t._v("某些箭头函数代码难以阅读")])]),t._v(" "),s("p",[s("strong",[t._v("不适用箭头函数的场景")])]),t._v(" "),s("ul",[s("li",[t._v("对象方法")]),t._v(" "),s("li",[t._v("对象原型")]),t._v(" "),s("li",[t._v("构造函数")]),t._v(" "),s("li",[t._v("动态上下文的回调函数")]),t._v(" "),s("li",[t._v("Vue生命周期method")])]),t._v(" "),s("blockquote",[s("p",[t._v("由于vue组件本质上是对象 导致箭头函数中this不能使用，但是react组件本质上是一个class(ES6) 所以可以使用箭头函数并可以使用this")])]),t._v(" "),s("h2",{attrs:{id:"for-in-与-for-of-区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#for-in-与-for-of-区别"}},[t._v("#")]),t._v(" for in 与 for of 区别")]),t._v(" "),s("ul",[s("li",[t._v("for in 用于可枚举数据 如对象、数组、字符串 得到key")]),t._v(" "),s("li",[t._v("for of 用于可迭代数据 如数组、字符串、Map、Set 得到value")])]),t._v(" "),s("h2",{attrs:{id:"js严格模式有什么特点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#js严格模式有什么特点"}},[t._v("#")]),t._v(" JS严格模式有什么特点")]),t._v(" "),s("ul",[s("li",[t._v("全局变量必须先声明")]),t._v(" "),s("li",[t._v("禁止this指向window")]),t._v(" "),s("li",[t._v("禁止使用with")]),t._v(" "),s("li",[t._v("函数参数不能重名")]),t._v(" "),s("li",[t._v("创建eval作用域")])]),t._v(" "),s("h2",{attrs:{id:"垃圾回收-gc"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#垃圾回收-gc"}},[t._v("#")]),t._v(" 垃圾回收 GC")]),t._v(" "),s("p",[t._v("算法")]),t._v(" "),s("ul",[s("li",[t._v("引用计数(之前)")]),t._v(" "),s("li",[t._v("标记清楚(现代)")])]),t._v(" "),s("h2",{attrs:{id:"js闭包是内存泄漏吗"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#js闭包是内存泄漏吗"}},[t._v("#")]),t._v(" JS闭包是内存泄漏吗？")]),t._v(" "),s("blockquote",[s("p",[t._v("严格意义上讲 不是内存泄漏  但是闭包中的数据无法被垃圾回收机制回收，但是这是在意料之内的 使用闭包就无法自动回收数据")])]),t._v(" "),s("h2",{attrs:{id:"遍历一个数组用for和foreach哪个更快"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#遍历一个数组用for和foreach哪个更快"}},[t._v("#")]),t._v(" 遍历一个数组用for和forEach哪个更快")]),t._v(" "),s("ul",[s("li",[t._v("for更快")]),t._v(" "),s("li",[t._v("forEach每次都要创建一个函数来调用，而for不会创建函数")]),t._v(" "),s("li",[t._v("函数需要独立的作用域，会有额外的开销")])]),t._v(" "),s("h2",{attrs:{id:"数组常用方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数组常用方法"}},[t._v("#")]),t._v(" 数组常用方法")]),t._v(" "),s("h3",{attrs:{id:"增"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#增"}},[t._v("#")]),t._v(" 增")]),t._v(" "),s("p",[s("strong",[t._v("下面前三种是对原数组产生影响的增添方法，第四种则不会对原数组产生影响")])]),t._v(" "),s("ul",[s("li",[t._v("push()")]),t._v(" "),s("li",[t._v("unshift() 在数组开头添加任意多个值，然后返回新的数组长度")]),t._v(" "),s("li",[t._v("splice() 传入三个参数，分别是开始位置、0（要删除的元素数量）、插入的元素，返回空数组")]),t._v(" "),s("li",[t._v("concat()")])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" array1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'b'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'c'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" array2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'d'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'e'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'f'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" array3 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" array1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("concat")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("array2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("array3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// Expected output: Array ["a", "b", "c", "d", "e", "f"]')]),t._v("\n")])])]),s("h3",{attrs:{id:"删"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#删"}},[t._v("#")]),t._v(" 删")]),t._v(" "),s("p",[s("strong",[t._v("下面三种都会影响原数组，最后一项不影响原数组：")])]),t._v(" "),s("ul",[s("li",[t._v("pop() 用于删除数组的最后一项，同时减少数组的"),s("code",[t._v("length")]),t._v(" 值，返回被删除的项")]),t._v(" "),s("li",[t._v("shift() 用于删除数组的第一项，同时减少数组的"),s("code",[t._v("length")]),t._v(" 值，返回被删除的项")]),t._v(" "),s("li",[t._v("splice() 传入两个参数，分别是开始位置，删除元素的数量，返回包含删除元素的数组")]),t._v(" "),s("li",[t._v("slice()")])]),t._v(" "),s("blockquote",[s("p",[t._v("slice() 方法返回一个新的数组对象，这一对象是一个由 begin 和 end 决定的原数组的浅拷贝（包括 begin，不包括end）。原始数组不会被改变。")])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" animals "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ant'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bison'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'camel'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'duck'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'elephant'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("animals"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("slice")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// Expected output: Array ["camel", "duck", "elephant"]')]),t._v("\n\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("animals"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("slice")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// Expected output: Array ["camel", "duck"]')]),t._v("\n\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("animals"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("slice")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// Expected output: Array ["bison", "camel", "duck", "elephant"]')]),t._v("\n\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("animals"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("slice")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// Expected output: Array ["duck", "elephant"]')]),t._v("\n\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("animals"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("slice")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// Expected output: Array ["camel", "duck"]')]),t._v("\n\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("animals"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("slice")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// Expected output: Array ["ant", "bison", "camel", "duck", "elephant"]')]),t._v("\n\n")])])]),s("h3",{attrs:{id:"改"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#改"}},[t._v("#")]),t._v(" 改")]),t._v(" "),s("p",[t._v("修改原来数组的内容，常用"),s("code",[t._v("splice")])]),t._v(" "),s("blockquote",[s("p",[t._v("splice() 方法通过删除或替换现有元素或者原地添加新的元素来修改数组，并以数组形式返回被修改的内容。此方法会改变原数组。")])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" months "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Jan'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'March'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'April'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'June'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nmonths"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("splice")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Feb'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Inserts at index 1")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("months"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// Expected output: Array ["Jan", "Feb", "March", "April", "June"]')]),t._v("\n\nmonths"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("splice")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'May'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Replaces 1 element at index 4")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("months"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// Expected output: Array ["Jan", "Feb", "March", "April", "May"]')]),t._v("\n\n")])])]),s("h3",{attrs:{id:"查"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查"}},[t._v("#")]),t._v(" 查")]),t._v(" "),s("p",[t._v("即查找元素，返回元素坐标或者元素值")]),t._v(" "),s("ul",[s("li",[t._v("indexOf() 返回要查找的元素在数组中的位置，如果没找到则返回 -1")]),t._v(" "),s("li",[t._v("includes() 返回要查找的元素在数组中的位置，找到返回"),s("code",[t._v("true")]),t._v("，否则"),s("code",[t._v("false")])]),t._v(" "),s("li",[t._v("find() 返回第一个匹配的元素")])]),t._v(" "),s("h3",{attrs:{id:"排序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#排序"}},[t._v("#")]),t._v(" 排序")]),t._v(" "),s("p",[t._v("数组有两个方法可以用来对元素重新排序：")]),t._v(" "),s("ul",[s("li",[t._v("reverse()")]),t._v(" "),s("li",[t._v("sort()")])]),t._v(" "),s("h3",{attrs:{id:"转换方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#转换方法"}},[t._v("#")]),t._v(" 转换方法")]),t._v(" "),s("p",[t._v("json()方法接收一个参数，即字符串分隔符，返回包含所有项的字符串")]),t._v(" "),s("h3",{attrs:{id:"迭代方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#迭代方法"}},[t._v("#")]),t._v(" 迭代方法")]),t._v(" "),s("p",[s("strong",[t._v("常用来迭代数组的方法（都不改变原数组）有如下：")])]),t._v(" "),s("ul",[s("li",[t._v("some()")]),t._v(" "),s("li",[t._v("every()")]),t._v(" "),s("li",[t._v("forEach()")]),t._v(" "),s("li",[t._v("filter()")]),t._v(" "),s("li",[t._v("map()")])]),t._v(" "),s("h2",{attrs:{id:"原型与原型链"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#原型与原型链"}},[t._v("#")]),t._v(" 原型与原型链")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("对应名称\n"),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("prototype")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 原型\n\n__proto__：原型链（链接点）\n\n从属关系\nprototype "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 函数的一个属性：对象"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n__prpto__ "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 对象Object的一个属性：对象"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n一个对象的__proto__就等于该对象构造函数的prototype\n\n对象的__proto__保存着该对象构造函数的prototype\n\n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" test "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("c "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("test"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n     * test{\n        a:1,\n        __proto__ = Test.prototype ={\n            b:2,\n            __proto = Obejct.prototype ={\n                c:3,\n                __proto__:null;\n            }\n        }\n     }\n    */")]),t._v("\n\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("test"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__ "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("test"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__ "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true ")]),t._v("\n    \n    原型继承：\n    由test即可访问到b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("c属性  如果test有b，c属性 覆盖底层的\n")])])]),s("h3",{attrs:{id:"function-和-object-的特殊性-函数-对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#function-和-object-的特殊性-函数-对象"}},[t._v("#")]),t._v(" Function 和 Object 的特殊性：函数 对象")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//构造函数的__proto__为function")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Test"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__ "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//函数的prototype属性和__proto__属性是全等的 ")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" Function"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\n\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" Object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//fuction ")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" Object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//false")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__ "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//由此推出 Obeject.__proto__ 与 Function.__proto__ 全等     ")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__ "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" Function"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//ture")]),t._v("\n\n")])])]),s("h3",{attrs:{id:"判断属性是否存在的方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#判断属性是否存在的方法"}},[t._v("#")]),t._v(" 判断属性是否存在的方法")]),t._v(" "),s("h4",{attrs:{id:"hasownproperty-寻找自身属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hasownproperty-寻找自身属性"}},[t._v("#")]),t._v(" hasOwnProperty()  寻找自身属性")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("test"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasOWnProperty")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//判断自身是否含有a属性")]),t._v("\n")])])]),s("h4",{attrs:{id:"in方法-寻找原型链继承属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#in方法-寻找原型链继承属性"}},[t._v("#")]),t._v(" in方法 寻找原型链继承属性")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" test"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//判断原型链上是否含有a属性")]),t._v("\n")])])]),s("h4",{attrs:{id:"constructor与实例直接的关系和特性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#constructor与实例直接的关系和特性"}},[t._v("#")]),t._v(" constructor与实例直接的关系和特性")]),t._v(" "),s("p",[t._v("test.constructor --\x3e 实例化test对象的构造函数 即 Test()")]),t._v(" "),s("h2",{attrs:{id:"js内存泄漏"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#js内存泄漏"}},[t._v("#")]),t._v(" js内存泄漏")]),t._v(" "),s("h3",{attrs:{id:"意外的全局变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#意外的全局变量"}},[t._v("#")]),t._v(" 意外的全局变量")]),t._v(" "),s("blockquote",[s("p",[t._v("js对未声明的变量会在全局最高对象上创建它的引用(是以属性存在的，而不是变量)")]),t._v(" "),s("p",[t._v("在浏览器上是window对象 在node环境下是global")]),t._v(" "),s("p",[t._v("如果未声明的变量缓存大量的数据，它可能只有在页面被刷新或者被关闭的时候才会释放内存，这样就造成了内存意外泄露")]),t._v(" "),s("p",[t._v("解决方案：尽量避免全局直接引用（在js文件中直接添加'use javascript' 开启严格模式）")])]),t._v(" "),s("h3",{attrs:{id:"console-log"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#console-log"}},[t._v("#")]),t._v(" console.log")]),t._v(" "),s("blockquote",[s("p",[t._v("在代码运行之后需要在开发工具查看对象信息，所以传递给console.log的对象是不能被垃圾回收的")])]),t._v(" "),s("h3",{attrs:{id:"闭包"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#闭包"}},[t._v("#")]),t._v(" 闭包")]),t._v(" "),s("blockquote",[s("p",[t._v("闭包是一个函数A返回一个内联的函数B，即使A函数执行完函数B也可以访问函数A里面的变量，这就是一个简单的闭包")]),t._v(" "),s("p",[t._v("由于闭包会携带包含它的函数的作用域，因此会比其他函数占用更多的内存")]),t._v(" "),s("p",[t._v("过度使用闭包可能会导致内存占用过多")])]),t._v(" "),s("h3",{attrs:{id:"dom泄露"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dom泄露"}},[t._v("#")]),t._v(" DOM泄露")]),t._v(" "),s("blockquote",[s("p",[t._v("浏览器中DOM和js采用的是不一样的引擎，DOM采用的是渲染引擎，而js采用的是v8引擎，所以在js操作DOM时会比较耗费性能，因为他们需要媒介来链接")]),t._v(" "),s("p",[t._v("删除的DOM对象在js中有全局的引用，导致无法释放内存。所以在删除更新操作后应该将其设置为null")])]),t._v(" "),s("h3",{attrs:{id:"被遗忘的定时器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#被遗忘的定时器"}},[t._v("#")]),t._v(" 被遗忘的定时器")]),t._v(" "),s("blockquote",[s("p",[t._v("js中常用的定时器setInterval()、setTimeout() 在使用之后如果没有手动关闭，会一直存在执行占用内存")]),t._v(" "),s("p",[t._v("所以在不用的时候我们可以通过clearInterbal()、clearTimeout()来关闭其对应的定时器，释放内存")])]),t._v(" "),s("h2",{attrs:{id:"判断未知数据的类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#判断未知数据的类型"}},[t._v("#")]),t._v(" 判断未知数据的类型")]),t._v(" "),s("blockquote",[s("p",[t._v("Object.prototype.toString().call()")])]),t._v(" "),s("p",[t._v("toString()方法和Object.prototype.toString.call()方法对比")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" arr"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//直接对一个数组调用toString()")]),t._v("\narr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "1,2"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//通过call指定arr数组为Object.prototype对象中的toString方法的上下文")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//"[object Array]"')]),t._v("\n")])])]),s("p",[t._v("Object.prototype中的toString方法是确实被继承下来了，但是很多东西总不会一层不变，作为儿子的数组重写了toString方法，所以直接调用数组对象上面的toString()方法调用到的实际是重写后的方法，并不是Object.prototype中的toString()方法")]),t._v(" "),s("p",[t._v("所以，当我们使用"),s("code",[t._v("arr.toString()")]),t._v("时，不能进行复杂数据类型的判断，因为它调用的是"),s("code",[t._v("Array.prototype.toString")]),t._v("，虽然"),s("code",[t._v("Array")]),t._v("也继承自"),s("code",[t._v("Object")]),t._v("，但js在"),s("code",[t._v("Array.prototype")]),t._v("上重写了"),s("code",[t._v("toString")]),t._v("，而我们通过"),s("code",[t._v("toString.call(arr)")]),t._v("实际上是通过原型链调用了"),s("code",[t._v("Object.prototype.toString")]),t._v("。")]),t._v(" "),s("h2",{attrs:{id:"预编译"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#预编译"}},[t._v("#")]),t._v(" 预编译")]),t._v(" "),s("p",[t._v("预编译过程")]),t._v(" "),s("blockquote",[s("ol",[s("li",[t._v("产生AO对象")]),t._v(" "),s("li",[t._v("将函数的参数以及函数里面声明的变量当做AO对象的属性名，值全部为undefined。")]),t._v(" "),s("li",[t._v("将实参的值赋值给形参。")]),t._v(" "),s("li",[t._v("在函数里面声明的函数，函数名作为AO对象的属性名，值赋值给函数体。（若参数名和函数名重叠，则函数体值会覆盖参数值）")])])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("script"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("a")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("a")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("b")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("d")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("script"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    创建"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("AO")]),t._v("对象\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("AO")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//此时AO对象为空")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n确定"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("AO")]),t._v("对象的属性名\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("AO")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\na："),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//函数参数")]),t._v("\nb："),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//函数里面声明的变量")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n将实参值赋值给形参\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("AO")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\na："),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//函数参数")]),t._v("\nb："),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//函数里面声明的变量")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n处理函数里面的声明函数\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("AO")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\na："),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("a")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//变量名一样，值覆盖")]),t._v("\nb："),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//函数里面声明的变量")]),t._v("\nd："),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("d")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n此时函数预编译已经完成的，预编译后执行代码：\n第一条执行的是控制台打印出a的值，所以输出"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("a")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("；\n第二条语句赋值给a，则"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("AO")]),t._v("对象中a的值被覆盖为"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("；\n第三条语句控制台打印a的值为"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("；\n第四条为声明，预编译处理过所以直接跳过；\n第五条打印出a的值，一样为"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("；\n第六条为赋值，赋值b的值为"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("；\n第七条打印出b的值"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("；\n第八条声明，预编译处理过所以直接跳过；\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);